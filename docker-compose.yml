version: "2"
services:
  screenly-server:
    build:
      context: .
      dockerfile: docker/Dockerfile.server.template
    environment:
      - HOME=/data
      - LISTEN=0.0.0.0
      - PYTHONPATH=/data/screenly
      - SCREENLYSERVICE=server
    network_mode: "host"
    privileged: true
    volumes:
      - resin-data:/data

  screenly-viewer:
    build:
      context: .
      dockerfile: docker/Dockerfile.viewer.template
    depends_on:
      - screenly-server
    environment:
      - HOME=/data
      - NOREFRESH=1
      - PYTHONPATH=/data/screenly
      - SCREENLYSERVICE=viewer
      - QT_QPA_PLATFORM=eglfs
    network_mode: "host"
    privileged: true
    volumes:
      - resin-data:/data

  screenly-websocket:
    build:
      context: .
      dockerfile: docker/Dockerfile.websocket.template
    depends_on:
      - screenly-server
    environment:
      - HOME=/data
      - PYTHONPATH=/data/screenly
      - SCREENLYSERVICE=websocket
    network_mode: "host"
    privileged: true
    volumes:
      - resin-data:/data

  screenly-celery:
    build:
      context: .
      dockerfile: docker/Dockerfile.celery.template
    depends_on:
      - screenly-server
      - redis
    environment:
      - HOME=/data
      - PYTHONPATH=/data/screenly
      - SCREENLYSERVICE=celery
    network_mode: "host"
    privileged: true
    volumes:
      - resin-data:/data

  redis:
    restart: always
    image: arm32v7/redis
    ports:
      - 6379:6379

volumes:
    resin-data:
