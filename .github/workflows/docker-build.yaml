name: Docker Image Build

on:
  push:
    branches:
      - master
    paths-ignore:
      - 'webview/**'
      - README.md

jobs:
  buildx:
    strategy:
      matrix:
        board: ['pi3', 'pi4']
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2
        with:
          buildx-version: latest
          qemu-version: latest

      - name: Cache Docker layers
        uses: actions/cache@v2
        id: cache
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-${{ matrix.board }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.board }}-buildx-

      - name: Login to DockerHub
        if: success() && github.event_name != 'pull_request'
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Set Docker tag and buildx args
        id: prepare
        run: |

          # Apply the correct docker tag based on branch
          if [ "$GITHUB_REF_NAME" == 'master' ]; then
             export "DOCKER_TAG=latest-${{ matrix.board }}";
          elif [ "$GITHUB_REF_NAME" == 'production' ]; then
             export "DOCKER_TAG=production-${{ matrix.board }}";
          fi
          echo "DOCKER_TAG=$DOCKER_TAG" >> $GITHUB_ENV
          echo "GIT_SHORT_HASH=$(git rev-parse --short HEAD)" >> $GITHUB_ENV

          # Generage a docker-compose file for Balena with the correct board
          mkdir -p balena-deploy
          cat docker-compose.balena.yml | \
            sed "s/BOARD_TAG/$GIT_SHORT_HASH-${{ matrix.board }}/" \
            > balena-deploy/docker-compose.yml

          # Define the build arguments
          echo ::set-output name=buildx_args::\
            --platform linux/arm/v7 \
            --output "type=image,push=true" \
            --cache-from "type=local,src=/tmp/.buildx-cache" \
            --cache-to "type=local,dest=/tmp/.buildx-cache" \
            --build-arg "BUILD_DATE=$(date -u +'%Y-%m-%dT%H:%M:%SZ')" \
            --build-arg "GIT_HASH=$GITHUB_SHA" \
            --build-arg "GIT_SHORT_HASH=$GIT_SHORT_HASH" \
            --build-arg "GIT_BRANCH=$GITHUB_REF_NAME"

      - name: Building base container
        run: |
          docker buildx build \
            ${{ steps.prepare.outputs.buildx_args }} \
            -f "docker/Dockerfile.base" \
            -t "screenly/srly-ose-base:$GIT_SHORT_HASH-${{ matrix.board }}" \
            -t "screenly/srly-ose-base:$DOCKER_TAG" .

      # We need to Clean up and refactor the blow to use concurrencty.
      - name: Building server container
        run: |
          docker buildx build \
            ${{ steps.prepare.outputs.buildx_args }} \
            -f "docker/Dockerfile.server" \
            -t "screenly/srly-ose-server:$GIT_SHORT_HASH-${{ matrix.board }}"
            -t "screenly/srly-ose-server:$DOCKER_TAG" .

      - name: Building celery container
        run: |
          docker buildx build \
            ${{ steps.prepare.outputs.buildx_args }} \
            -f "docker/Dockerfile.celery" \
            -t "screenly/srly-ose-celery:$GIT_SHORT_HASH-${{ matrix.board }}"
            -t "screenly/srly-ose-celery:$DOCKER_TAG" .

      - name: Building redis container
        run: |
          docker buildx build \
            ${{ steps.prepare.outputs.buildx_args }} \
            -f "docker/Dockerfile.redis" \
            -t "screenly/srly-ose-redis:$GIT_SHORT_HASH-${{ matrix.board }}"
            -t "screenly/srly-ose-redis:$DOCKER_TAG" .

      - name: Building websocket container
        run: |
          docker buildx build \
            ${{ steps.prepare.outputs.buildx_args }} \
            -f "docker/Dockerfile.websocket" \
            -t "screenly/srly-ose-websocket:$GIT_SHORT_HASH-${{ matrix.board }}"
            -t "screenly/srly-ose-websocket:$DOCKER_TAG" .

      - name: Building nginx container
        run: |
          docker buildx build \
            ${{ steps.prepare.outputs.buildx_args }} \
            -f "docker/Dockerfile.nginx" \
            -t "screenly/srly-ose-nginx:$GIT_SHORT_HASH-${{ matrix.board }}"
            -t "screenly/srly-ose-nginx:$DOCKER_TAG" .

      - name: Building viewer container
        run: |
          docker buildx build \
            ${{ steps.prepare.outputs.buildx_args }} \
            --build-arg "PI_VERSION=${{ matrix.board }}" \
            -f docker/Dockerfile.viewer \
            -t "screenly/srly-ose-viewer:$GIT_SHORT_HASH-${{ matrix.board }}"
            -t "screenly/srly-ose-viewer:$DOCKER_TAG-${{ matrix.board }}" .

      - uses: balena-io/deploy-to-balena-action@master
        id: build
        with:
          balena_token: ${{ secrets.BALENA_TOKEN }}
          fleet: screenly2/ose-${{ matrix.board }}
          source: balena-deploy
