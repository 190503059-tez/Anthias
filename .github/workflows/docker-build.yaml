name: Docker Image Build

on:
  push:
    branches:
      - master

jobs:
  buildx:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        id: buildx
        uses: crazy-max/ghaction-docker-buildx@v3
        with:
          buildx-version: latest
          qemu-version: latest

      - name: Cache Docker layers
        uses: actions/cache@v2
        id: cache
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

     #- name: Login to DockerHub
     #  if: success() && github.event_name != 'pull_request'
     #  uses: docker/login-action@v1
     #  with:
     #    username: ${{ secrets.DOCKER_USERNAME }}
     #    password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Set Docker tag
        run: |
          if [ "$GITHUB_REF_NAME" == 'master' ]; then
             export 'DOCKER_TAG=latest';
          elif [ "$GITHUB_REF_NAME" == 'production' ]; then
             export 'DOCKER_TAG=production';
          fi
          echo "DOCKER_TAG=$DOCKER_TAG" >> $GITHUB_ENV

      - name: Building base container
        run: |
          docker buildx build \
            --platform linux/arm/v6,linux/arm/v7 \
            --cache-from "type=local,src=/tmp/.buildx-cache" \
            --build-arg "GIT_HASH=$GITHUB_SHA" \
            --build-arg "GIT_SHORT_HASH=$(git rev-parse --short HEAD)" \
            --build-arg "GIT_BRANCH=$GITHUB_REF_NAME" \
            -f "docker/Dockerfile.base" \
            -t "screenly/srly-ose-base:$DOCKER_TAG" .
