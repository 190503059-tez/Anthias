// Generated by CoffeeScript 1.9.3
(function() {
  $().ready(function() {
    var currentUsername;
    currentUsername = $("input:text[name='user']").val();
    $("#request-error .close").click(function(e) {
      return $("#request-error .alert").hide();
    });
    $("#btn-backup").click(function(e) {
      var btnText;
      btnText = $("#btn-backup").text();
      $("#btn-backup").text("Preparing archive...");
      $("#btn-upload").prop("disabled", true);
      $("#btn-backup").prop("disabled", true);
      return $.ajax({
        method: "POST",
        url: "api/v1/backup",
        timeout: 1800 * 1000
      }).done(function(data, e) {
        if (data) {
          return window.location = "static_with_mime/" + data + "?mime=application/x-tgz";
        }
      }).fail(function(data, e) {
        var err, j;
        $("#request-error .alert").addClass("alert-danger");
        $("#request-error .alert").removeClass("alert-success");
        $("#request-error .alert").show();
        if ((data.responseText !== "") && (j = $.parseJSON(data.responseText)) && (err = j.error)) {
          return ($("#request-error .msg")).text("Server Error: " + err);
        } else {
          return ($("#request-error .msg")).text("The operation failed. Please reload the page and try again.");
        }
      }).always(function(data, e) {
        $("#btn-backup").text(btnText);
        $("#btn-upload").prop("disabled", false);
        return $("#btn-backup").prop("disabled", false);
      });
    });
    $("#btn-upload").click(function(e) {
      e.preventDefault();
      return $("[name='backup_upload']").click();
    });
    $("[name='backup_upload']").fileupload({
      url: "api/v1/recover",
      progressall: function(e, data) {
        var valuenow;
        if (data.loaded && data.total) {
          valuenow = data.loaded / data.total * 100;
          $(".progress .bar").css("width", valuenow + "%");
          return $(".progress .bar").text("Uploading: " + Math.floor(valuenow) + "%");
        }
      },
      add: function(e, data) {
        $("#btn-upload").hide();
        $("#btn-backup").hide();
        $(".progress").show();
        return data.submit();
      },
      done: function(e, data) {
        var message;
        if ((data.jqXHR.responseText !== "") && (message = $.parseJSON(data.jqXHR.responseText))) {
          $("#request-error .alert").show();
          $("#request-error .alert").addClass("alert-success");
          $("#request-error .alert").removeClass("alert-danger");
          return ($("#request-error .msg")).text(message);
        }
      },
      fail: function(e, data) {
        var err, j;
        $("#request-error .alert").show();
        $("#request-error .alert").addClass("alert-danger");
        $("#request-error .alert").removeClass("alert-success");
        if ((data.jqXHR.responseText !== "") && (j = $.parseJSON(data.jqXHR.responseText)) && (err = j.error)) {
          return ($("#request-error .msg")).text("Server Error: " + err);
        } else {
          return ($("#request-error .msg")).text("The operation failed. Please reload the page and try again.");
        }
      },
      always: function(e, data) {
        $(".progress").hide();
        $("#btn-upload").show();
        return $("#btn-backup").show();
      }
    });
    $("#btn-reset").click(function(e) {
      return $.get("/api/v1/reset_wifi").done(function(e) {
        $("#request-error .alert").show();
        $("#request-error .alert").addClass("alert-success");
        $("#request-error .alert").removeClass("alert-danger");
        return ($("#request-error .msg")).text("Reset was successful. Please reboot the device.");
      });
    });
    $("#auth_checkbox p span").click(function(e) {
      if ($("input:checkbox[name='use_system_commands']").is(":checked")) {
        $("input:text[name='user']").val(currentUsername);
        return $("#user_group, #password_group, #password2_group, #curpassword_group").show();
      } else if ($("input:checkbox[name='use_auth']").is(":checked") || $("input:checkbox[name='use_system_commands']").is(":checked")) {
        $("#user_group, #password_group, #password2_group").hide();
        $("input:text[name='user']").val("");
        $("input:password[name='password']").val("");
        return $("input:password[name='password2']").val("");
      } else {
        $("input:text[name='user']").val(currentUsername);
        return $("#user_group, #password_group, #password2_group, #curpassword_group").show();
      }
    });
    $("#use_system_commands_checkbox p span").click(function(e) {
      if ($("input:checkbox[name='use_auth']").is(":checked")) {
        $("input:text[name='user']").val(currentUsername);
        return $("#user_group, #password_group, #password2_group, #curpassword_group").show();
      } else if ($("input:checkbox[name='use_auth']").is(":checked") || $("input:checkbox[name='use_system_commands']").is(":checked")) {
        $("#user_group, #password_group, #password2_group").hide();
        $("input:text[name='user']").val("");
        $("input:password[name='password']").val("");
        return $("input:password[name='password2']").val("");
      } else {
        $("input:text[name='user']").val(currentUsername);
        return $("#user_group, #password_group, #password2_group, #curpassword_group").show();
      }
    });
    if ($("input:checkbox[name='use_auth']").is(":checked") || $("input:checkbox[name='use_system_commands']").is(":checked")) {
      $("#user_group, #password_group, #password2_group, #curpassword_group").show();
    } else {
      $("#user_group, #password_group, #password2_group, #curpassword_group").hide();
    }
    $("#btn-upgrade").click(function(e) {
      return $("#upgrade-modal").modal("show");
    });
    $("#close-upgrade-btn").click(function(e) {
      return $("#upgrade-modal").modal("hide");
    });
    return $("#start-upgrade-btn").click(function(e) {
      $("#start-upgrade-btn").prop("disabled", true);
      ($("#upgrade_logs")).text("");
      return $.post("api/v1/upgrade_screenly", {
        "branch": $("#branch-group-radio input:radio:checked").val(),
        "manage_network": $("input:checkbox[name='manage_network']").is(":checked"),
        "system_upgrade": $("input:checkbox[name='system_upgrade']").is(":checked")
      }).done(function(data, e) {
        var getStatus;
        getStatus = function(id) {
          return $.get("/upgrade_status/" + id).done(function(data, e, jqXHR) {
            if (data.status) {
              ($("#upgrade_logs")).text(data.status);
              ($("#upgrade_logs")).scrollTop(($("#upgrade_logs")).prop("scrollHeight"));
            }
            if (jqXHR.status === 202) {
              return setTimeout(function() {
                return getStatus(id);
              }, 1000);
            } else {
              ($("#upgrade_logs")).append("\nScreenly-OSE update was finished");
              ($("#upgrade_logs")).scrollTop(($("#upgrade_logs")).prop("scrollHeight"));
              window.onbeforeunload = null;
              return $("#start-upgrade-btn").prop("disabled", false);
            }
          }).fail(function(data, e) {
            var err, j;
            if ((data.responseText !== "") && (j = $.parseJSON(data.responseText)) && (err = j.error)) {
              return ($("#upgrade_logs")).append("Server Error: " + err);
            } else {
              return ($("#upgrade_logs")).append("The operation failed. Please reload the page and try again.");
            }
          });
        };
        ($("#upgrade_logs")).text("Screenly-OSE upgrade has started successfully.");
        window.onbeforeunload = function() {
          return false;
        };
        return getStatus(data.id);
      }).fail(function(data, e) {
        var err, j;
        if ((data.responseText !== "") && (j = $.parseJSON(data.responseText)) && (err = j.error)) {
          ($("#upgrade_logs")).append("Server Error: " + err);
        } else {
          ($("#upgrade_logs")).append("The operation failed. Please reload the page and try again.");
        }
        return $("#start-upgrade-btn").prop("disabled", false);
      });
    });
  });

}).call(this);

//# sourceMappingURL=settings.js.map
